from threading import Thread
from tkinter.filedialog import askopenfilename
from kivymd.uix.relativelayout import MDRelativeLayout
from kivymd.app import MDApp
from kivy.uix.label import Label
from kivy.uix.image import Image
from kivy.uix.button import Button
from kivy.uix.textinput import TextInput
from kivy.core.window import Window
from gtts import gTTS
import os

Window.size = (500, 600)


class MyApp(MDApp):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.file = None
        self.audio_file = None
        self.text = ""

    def filechooser(self, event):
        self.file = askopenfilename(filetypes=[("Text Files", '*.txt')])
        if self.file:
            with open(self.file, 'r') as f:
                self.text = f.read()
            self.locationLabel.text = self.file
            self.convertButton.pos_hint = {'center_x': 0.5, 'center_y': .35}
            self.textInput.text = self.text

    def text_to_audio(self):
        if not self.textInput.text.strip():
            self.successLabel.text = "Text input is empty"
            return

        self.text = self.textInput.text
        audio = gTTS(text=self.text, lang='en', slow=False)

        if self.file:
            self.audio_file = self.file.replace(".txt", ".mp3")
        else:
            self.audio_file = "output.mp3"

        audio.save(self.audio_file)
        print(f"Audio file saved as {self.audio_file}")
        self.successLabel.text = "Audio file created successfully"

    def process_text_thread(self, event):
        thread1 = Thread(target=self.text_to_audio)
        thread1.start()

    def build(self):
        layout = MDRelativeLayout(md_bg_color=[248 / 255, 200 / 255, 220 / 255])

        self.img = Image(source='mp33.png', size_hint=(.5, .5),
                         pos_hint={'center_x': 0.5, 'center_y': .85})

        self.filechooserLabel = Label(text="Please select a text file to convert to audio",
                                      pos_hint={'center_x': 0.5, 'center_y': .60},
                                      size_hint=(1, 1), font_size=20, color=(1, 0, 0))

        self.select_button = Button(text="Select", size_hint=(None, None), pos=(375, 340),
                                    height=40, on_press=self.filechooser)

        self.textInput = TextInput(text="", pos_hint={'center_x': .5, 'center_y': .45},
                                   size_hint=(.8, .3), multiline=True, font_size=18)

        self.convertButton = Button(text="Convert", pos_hint={'center_x': 0.5, 'center_y': .35},
                                    size_hint=(.2, .1), size=(75, 75), font_name="Comic",
                                    bold=True, font_size=24, background_color=(0, 1, 0),
                                    on_press=self.process_text_thread)

        self.successLabel = Label(text="", pos_hint={'center_x': .5, 'center_y': .20},
                                  size_hint=(1, 1), font_size=20, color=(1, 0, 0))

        layout.add_widget(self.img)
        layout.add_widget(self.filechooserLabel)
        layout.add_widget(self.select_button)
        layout.add_widget(self.textInput)
        layout.add_widget(self.convertButton)
        layout.add_widget(self.successLabel)

        return layout


if __name__ == "__main__":
    MyApp().run()
